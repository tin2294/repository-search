{"ast":null,"code":"var _jsxFileName = \"/Users/tingting/code/tin2294/repository-search/src/SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useQuery, gql } from \"apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EXCHANGE_RATES = gql`\n  query GetExchangeRates {\n    rates(currency: \"AUD\") {\n      currency\n      rate\n    }\n  }\n`;\n\nfunction SearchPage() {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(EXCHANGE_RATES);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return data.rates.map(_ref => {\n    let {\n      currency,\n      rate\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [currency, \": \", rate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, currency, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this);\n  });\n}\n\n_s(SearchPage, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SearchPage;\nexport default SearchPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"sources":["/Users/tingting/code/tin2294/repository-search/src/SearchPage.js"],"names":["React","useQuery","gql","EXCHANGE_RATES","SearchPage","data","loading","error","rates","map","currency","rate"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,eAA9B;;AAEA,MAAMC,cAAc,GAAGD,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASE,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BN,QAAQ,CAACE,cAAD,CAAzC;;AAEA,MAAIG,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,wBAAO;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe;AAAA,QAAC;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD;AAAA,wBACpB;AAAA,6BACE;AAAA,mBACGD,QADH,QACeC,IADf;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAUD,QAAV;AAAA;AAAA;AAAA;AAAA,YADoB;AAAA,GAAf,CAAP;AAOD;;GAlBQN,U;UAC0BH,Q;;;KAD1BG,U;AAoBT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useQuery, gql } from \"apollo/client\";\n\nconst EXCHANGE_RATES = gql`\n  query GetExchangeRates {\n    rates(currency: \"AUD\") {\n      currency\n      rate\n    }\n  }\n`;\n\nfunction SearchPage() {\n  const { data, loading, error } = useQuery(EXCHANGE_RATES);\n\n  if (loading) {\n    return <div>loading</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return data.rates.map(({ currency, rate }) => (\n    <div key={currency}>\n      <p>\n        {currency}: {rate}\n      </p>\n    </div>\n  ));\n}\n\nexport default SearchPage;\n"]},"metadata":{},"sourceType":"module"}