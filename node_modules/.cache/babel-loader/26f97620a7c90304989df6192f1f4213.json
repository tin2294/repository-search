{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport PropTypes from 'prop-types';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport createConnector from \"../core/createConnector.js\";\nimport { cleanUpValue, getIndexId, refineValue, getCurrentRefinementValue, getResults } from \"../core/indexUtils.js\";\nexport var getId = function getId(props) {\n  return props.attributes[0];\n};\nvar namespace = 'hierarchicalMenu';\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, \"\".concat(namespace, \".\").concat(getId(props)), null);\n\n  if (currentRefinement === '') {\n    return null;\n  }\n\n  return currentRefinement;\n}\n\nfunction getValue(path, props, searchState, context) {\n  var id = props.id,\n      attributes = props.attributes,\n      separator = props.separator,\n      rootPath = props.rootPath,\n      showParentLevel = props.showParentLevel;\n  var currentRefinement = getCurrentRefinement(props, searchState, context);\n  var nextRefinement;\n\n  if (currentRefinement === null) {\n    nextRefinement = path;\n  } else {\n    var tmpSearchParameters = new algoliasearchHelper.SearchParameters({\n      hierarchicalFacets: [{\n        name: id,\n        attributes: attributes,\n        separator: separator,\n        rootPath: rootPath,\n        showParentLevel: showParentLevel\n      }]\n    });\n    nextRefinement = tmpSearchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement).toggleHierarchicalFacetRefinement(id, path).getHierarchicalRefinement(id)[0];\n  }\n\n  return nextRefinement;\n}\n\nfunction transformValue(value, props, searchState, context) {\n  return value.map(function (v) {\n    return {\n      label: v.name,\n      value: getValue(v.path, props, searchState, context),\n      count: v.count,\n      isRefined: v.isRefined,\n      items: v.data && transformValue(v.data, props, searchState, context)\n    };\n  });\n}\n\nvar truncate = function truncate() {\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return items.slice(0, limit).map(function () {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Array.isArray(item.items) ? _objectSpread(_objectSpread({}, item), {}, {\n      items: truncate(item.items, limit)\n    }) : item;\n  });\n};\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props);\n\n  var nextValue = _defineProperty({}, id, nextRefinement || '');\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, \"\".concat(namespace, \".\").concat(getId(props)));\n}\n\nvar sortBy = ['name:asc'];\n/**\n * connectHierarchicalMenu connector provides the logic to build a widget that will\n * give the user the ability to explore a tree-like structure.\n * This is commonly used for multi-level categorization of products on e-commerce\n * websites. From a UX point of view, we suggest not displaying more than two levels deep.\n * @name connectHierarchicalMenu\n * @requirements To use this widget, your attributes must be formatted in a specific way.\n * If you want for example to have a hiearchical menu of categories, objects in your index\n * should be formatted this way:\n *\n * ```json\n * {\n *   \"categories.lvl0\": \"products\",\n *   \"categories.lvl1\": \"products > fruits\",\n *   \"categories.lvl2\": \"products > fruits > citrus\"\n * }\n * ```\n *\n * It's also possible to provide more than one path for each level:\n *\n * ```json\n * {\n *   \"categories.lvl0\": [\"products\", \"goods\"],\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\n * }\n * ```\n *\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n *\n * @kind connector\n * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.\n * @propType {string} [defaultRefinement] - the item value selected by default\n * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limit and showMoreLimit.\n * @propType {number} [limit=10] -  The maximum number of items displayed.\n * @propType {number} [showMoreLimit=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.\n * @propType {string} [separator='>'] -  Specifies the level separator used in the data.\n * @propType {string} [rootPath=null] - The path to use if the first level is not the root level.\n * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {string} currentRefinement - the refinement currently applied\n * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the HierarchicalMenu can display. items has the same shape as parent items.\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaHierarchicalMenu',\n  propTypes: {\n    attributes: function attributes(props, propName, componentName) {\n      var isNotString = function isNotString(val) {\n        return typeof val !== 'string';\n      };\n\n      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {\n        return new Error(\"Invalid prop \".concat(propName, \" supplied to \").concat(componentName, \". Expected an Array of Strings\"));\n      }\n\n      return undefined;\n    },\n    separator: PropTypes.string,\n    rootPath: PropTypes.string,\n    showParentLevel: PropTypes.bool,\n    defaultRefinement: PropTypes.string,\n    showMore: PropTypes.bool,\n    limit: PropTypes.number,\n    showMoreLimit: PropTypes.number,\n    transformItems: PropTypes.func,\n    facetOrdering: PropTypes.bool\n  },\n  defaultProps: {\n    showMore: false,\n    limit: 10,\n    showMoreLimit: 20,\n    separator: ' > ',\n    rootPath: null,\n    showParentLevel: true,\n    facetOrdering: true\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var showMore = props.showMore,\n        limit = props.limit,\n        showMoreLimit = props.showMoreLimit,\n        facetOrdering = props.facetOrdering;\n    var id = getId(props);\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));\n\n    if (!isFacetPresent) {\n      return {\n        items: [],\n        currentRefinement: getCurrentRefinement(props, searchState, {\n          ais: props.contextValue,\n          multiIndexContext: props.indexContextValue\n        }),\n        canRefine: false\n      };\n    }\n\n    var itemsLimit = showMore ? showMoreLimit : limit;\n    var value = results.getFacetValues(id, {\n      sortBy: sortBy,\n      facetOrdering: facetOrdering\n    });\n    var items = value.data ? transformValue(value.data, props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) : [];\n    var transformedItems = props.transformItems ? props.transformItems(items) : items;\n    return {\n      items: truncate(transformedItems, itemsLimit),\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      canRefine: transformedItems.length > 0\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    var attributes = props.attributes,\n        separator = props.separator,\n        rootPath = props.rootPath,\n        showParentLevel = props.showParentLevel,\n        showMore = props.showMore,\n        limit = props.limit,\n        showMoreLimit = props.showMoreLimit,\n        contextValue = props.contextValue;\n    var id = getId(props);\n    var itemsLimit = showMore ? showMoreLimit : limit;\n    searchParameters = searchParameters.addHierarchicalFacet({\n      name: id,\n      attributes: attributes,\n      separator: separator,\n      rootPath: rootPath,\n      showParentLevel: showParentLevel\n    }).setQueryParameters({\n      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, itemsLimit)\n    });\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (currentRefinement !== null) {\n      searchParameters = searchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement);\n    }\n\n    return searchParameters;\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var rootAttribute = props.attributes[0];\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var items = !currentRefinement ? [] : [{\n      label: \"\".concat(rootAttribute, \": \").concat(currentRefinement),\n      attribute: rootAttribute,\n      value: function value(nextState) {\n        return _refine(props, nextState, '', {\n          ais: props.contextValue,\n          multiIndexContext: props.indexContextValue\n        });\n      },\n      currentRefinement: currentRefinement\n    }];\n    return {\n      id: id,\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: items\n    };\n  }\n});","map":{"version":3,"sources":["/Users/tingting/code/tin2294/repository-search/node_modules/react-instantsearch-core/dist/es/connectors/connectHierarchicalMenu.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","PropTypes","algoliasearchHelper","createConnector","cleanUpValue","getIndexId","refineValue","getCurrentRefinementValue","getResults","getId","props","attributes","namespace","getCurrentRefinement","searchState","context","currentRefinement","concat","getValue","path","id","separator","rootPath","showParentLevel","nextRefinement","tmpSearchParameters","SearchParameters","hierarchicalFacets","name","toggleHierarchicalFacetRefinement","getHierarchicalRefinement","transformValue","value","map","v","label","count","isRefined","items","data","truncate","undefined","limit","slice","item","Array","isArray","_refine","nextValue","resetPage","_cleanUp","sortBy","displayName","propTypes","propName","componentName","isNotString","val","some","Error","string","bool","defaultRefinement","showMore","number","showMoreLimit","transformItems","func","facetOrdering","defaultProps","getProvidedProps","searchResults","results","ais","contextValue","multiIndexContext","indexContextValue","isFacetPresent","Boolean","getFacetByName","canRefine","itemsLimit","getFacetValues","transformedItems","refine","cleanUp","getSearchParameters","searchParameters","addHierarchicalFacet","setQueryParameters","maxValuesPerFacet","Math","max","getMetadata","rootAttribute","attribute","nextState","index"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport createConnector from \"../core/createConnector.js\";\nimport { cleanUpValue, getIndexId, refineValue, getCurrentRefinementValue, getResults } from \"../core/indexUtils.js\";\nexport var getId = function getId(props) {\n  return props.attributes[0];\n};\nvar namespace = 'hierarchicalMenu';\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, \"\".concat(namespace, \".\").concat(getId(props)), null);\n\n  if (currentRefinement === '') {\n    return null;\n  }\n\n  return currentRefinement;\n}\n\nfunction getValue(path, props, searchState, context) {\n  var id = props.id,\n      attributes = props.attributes,\n      separator = props.separator,\n      rootPath = props.rootPath,\n      showParentLevel = props.showParentLevel;\n  var currentRefinement = getCurrentRefinement(props, searchState, context);\n  var nextRefinement;\n\n  if (currentRefinement === null) {\n    nextRefinement = path;\n  } else {\n    var tmpSearchParameters = new algoliasearchHelper.SearchParameters({\n      hierarchicalFacets: [{\n        name: id,\n        attributes: attributes,\n        separator: separator,\n        rootPath: rootPath,\n        showParentLevel: showParentLevel\n      }]\n    });\n    nextRefinement = tmpSearchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement).toggleHierarchicalFacetRefinement(id, path).getHierarchicalRefinement(id)[0];\n  }\n\n  return nextRefinement;\n}\n\nfunction transformValue(value, props, searchState, context) {\n  return value.map(function (v) {\n    return {\n      label: v.name,\n      value: getValue(v.path, props, searchState, context),\n      count: v.count,\n      isRefined: v.isRefined,\n      items: v.data && transformValue(v.data, props, searchState, context)\n    };\n  });\n}\n\nvar truncate = function truncate() {\n  var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return items.slice(0, limit).map(function () {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return Array.isArray(item.items) ? _objectSpread(_objectSpread({}, item), {}, {\n      items: truncate(item.items, limit)\n    }) : item;\n  });\n};\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId(props);\n\n  var nextValue = _defineProperty({}, id, nextRefinement || '');\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage, namespace);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, \"\".concat(namespace, \".\").concat(getId(props)));\n}\n\nvar sortBy = ['name:asc'];\n/**\n * connectHierarchicalMenu connector provides the logic to build a widget that will\n * give the user the ability to explore a tree-like structure.\n * This is commonly used for multi-level categorization of products on e-commerce\n * websites. From a UX point of view, we suggest not displaying more than two levels deep.\n * @name connectHierarchicalMenu\n * @requirements To use this widget, your attributes must be formatted in a specific way.\n * If you want for example to have a hiearchical menu of categories, objects in your index\n * should be formatted this way:\n *\n * ```json\n * {\n *   \"categories.lvl0\": \"products\",\n *   \"categories.lvl1\": \"products > fruits\",\n *   \"categories.lvl2\": \"products > fruits > citrus\"\n * }\n * ```\n *\n * It's also possible to provide more than one path for each level:\n *\n * ```json\n * {\n *   \"categories.lvl0\": [\"products\", \"goods\"],\n *   \"categories.lvl1\": [\"products > fruits\", \"goods > to eat\"]\n * }\n * ```\n *\n * All attributes passed to the `attributes` prop must be present in \"attributes for faceting\"\n * on the Algolia dashboard or configured as `attributesForFaceting` via a set settings call to the Algolia API.\n *\n * @kind connector\n * @propType {array.<string>} attributes - List of attributes to use to generate the hierarchy of the menu. See the example for the convention to follow.\n * @propType {string} [defaultRefinement] - the item value selected by default\n * @propType {boolean} [showMore=false] - Flag to activate the show more button, for toggling the number of items between limit and showMoreLimit.\n * @propType {number} [limit=10] -  The maximum number of items displayed.\n * @propType {number} [showMoreLimit=20] -  The maximum number of items displayed when the user triggers the show more. Not considered if `showMore` is false.\n * @propType {string} [separator='>'] -  Specifies the level separator used in the data.\n * @propType {string} [rootPath=null] - The path to use if the first level is not the root level.\n * @propType {boolean} [showParentLevel=true] - Flag to set if the parent level should be displayed.\n * @propType {function} [transformItems] - Function to modify the items being displayed, e.g. for filtering or sorting them. Takes an items as parameter and expects it back in return.\n * @providedPropType {function} refine - a function to toggle a refinement\n * @providedPropType {function} createURL - a function to generate a URL for the corresponding search state\n * @providedPropType {string} currentRefinement - the refinement currently applied\n * @providedPropType {array.<{items: object, count: number, isRefined: boolean, label: string, value: string}>} items - the list of items the HierarchicalMenu can display. items has the same shape as parent items.\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaHierarchicalMenu',\n  propTypes: {\n    attributes: function attributes(props, propName, componentName) {\n      var isNotString = function isNotString(val) {\n        return typeof val !== 'string';\n      };\n\n      if (!Array.isArray(props[propName]) || props[propName].some(isNotString) || props[propName].length < 1) {\n        return new Error(\"Invalid prop \".concat(propName, \" supplied to \").concat(componentName, \". Expected an Array of Strings\"));\n      }\n\n      return undefined;\n    },\n    separator: PropTypes.string,\n    rootPath: PropTypes.string,\n    showParentLevel: PropTypes.bool,\n    defaultRefinement: PropTypes.string,\n    showMore: PropTypes.bool,\n    limit: PropTypes.number,\n    showMoreLimit: PropTypes.number,\n    transformItems: PropTypes.func,\n    facetOrdering: PropTypes.bool\n  },\n  defaultProps: {\n    showMore: false,\n    limit: 10,\n    showMoreLimit: 20,\n    separator: ' > ',\n    rootPath: null,\n    showParentLevel: true,\n    facetOrdering: true\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var showMore = props.showMore,\n        limit = props.limit,\n        showMoreLimit = props.showMoreLimit,\n        facetOrdering = props.facetOrdering;\n    var id = getId(props);\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var isFacetPresent = Boolean(results) && Boolean(results.getFacetByName(id));\n\n    if (!isFacetPresent) {\n      return {\n        items: [],\n        currentRefinement: getCurrentRefinement(props, searchState, {\n          ais: props.contextValue,\n          multiIndexContext: props.indexContextValue\n        }),\n        canRefine: false\n      };\n    }\n\n    var itemsLimit = showMore ? showMoreLimit : limit;\n    var value = results.getFacetValues(id, {\n      sortBy: sortBy,\n      facetOrdering: facetOrdering\n    });\n    var items = value.data ? transformValue(value.data, props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }) : [];\n    var transformedItems = props.transformItems ? props.transformItems(items) : items;\n    return {\n      items: truncate(transformedItems, itemsLimit),\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      canRefine: transformedItems.length > 0\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    var attributes = props.attributes,\n        separator = props.separator,\n        rootPath = props.rootPath,\n        showParentLevel = props.showParentLevel,\n        showMore = props.showMore,\n        limit = props.limit,\n        showMoreLimit = props.showMoreLimit,\n        contextValue = props.contextValue;\n    var id = getId(props);\n    var itemsLimit = showMore ? showMoreLimit : limit;\n    searchParameters = searchParameters.addHierarchicalFacet({\n      name: id,\n      attributes: attributes,\n      separator: separator,\n      rootPath: rootPath,\n      showParentLevel: showParentLevel\n    }).setQueryParameters({\n      maxValuesPerFacet: Math.max(searchParameters.maxValuesPerFacet || 0, itemsLimit)\n    });\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (currentRefinement !== null) {\n      searchParameters = searchParameters.toggleHierarchicalFacetRefinement(id, currentRefinement);\n    }\n\n    return searchParameters;\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var rootAttribute = props.attributes[0];\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var items = !currentRefinement ? [] : [{\n      label: \"\".concat(rootAttribute, \": \").concat(currentRefinement),\n      attribute: rootAttribute,\n      value: function value(nextState) {\n        return _refine(props, nextState, '', {\n          ais: props.contextValue,\n          multiIndexContext: props.indexContextValue\n        });\n      },\n      currentRefinement: currentRefinement\n    }];\n    return {\n      id: id,\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: items\n    };\n  }\n});"]},"metadata":{},"sourceType":"module"}