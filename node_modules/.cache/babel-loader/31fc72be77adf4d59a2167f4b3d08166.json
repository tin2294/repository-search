{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { InstantSearchConsumer, IndexProvider } from \"../core/context.js\";\n\nfunction getIndexContext(props) {\n  return {\n    targetedIndex: props.indexId\n  };\n}\n/**\n * The component that allows you to apply widgets to a dedicated index. It's\n * useful if you want to build an interface that targets multiple indices.\n *\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Index, SearchBox, Hits, Configure } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Configure hitsPerPage={5} />\n *     <SearchBox />\n *     <Index indexName=\"instant_search\">\n *       <Hits />\n *     </Index>\n *     <Index indexName=\"bestbuy\">\n *       <Hits />\n *     </Index>\n *   </InstantSearch>\n * );\n */\n\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      indexContext: getIndexContext(_this.props)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n\n    _this.props.contextValue.onSearchParameters(_this.getSearchParameters.bind(_assertThisInitialized(_this)), {\n      ais: _this.props.contextValue,\n      multiIndexContext: _this.state.indexContext\n    }, _this.props, undefined);\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.indexName !== prevProps.indexName) {\n        this.props.contextValue.widgetsManager.update();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (typeof this.unregisterWidget === 'function') {\n        this.unregisterWidget();\n      }\n    }\n  }, {\n    key: \"getSearchParameters\",\n    value: function getSearchParameters(searchParameters, props) {\n      return searchParameters.setIndex(this.props ? this.props.indexName : props.indexName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var childrenCount = Children.count(this.props.children);\n\n      if (childrenCount === 0) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(IndexProvider, {\n        value: this.state.indexContext\n      }, this.props.children);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      return {\n        indexContext: getIndexContext(props)\n      };\n    }\n  }]);\n\n  return Index;\n}(Component);\n\n_defineProperty(Index, \"propTypes\", {\n  indexName: PropTypes.string.isRequired,\n  indexId: PropTypes.string.isRequired,\n  children: PropTypes.node\n});\n\n_defineProperty(Index, \"displayName\", 'AlgoliaIndex');\n\nvar IndexWrapper = function IndexWrapper(props) {\n  var inferredIndexId = props.indexName;\n  return /*#__PURE__*/React.createElement(InstantSearchConsumer, null, function (contextValue) {\n    return /*#__PURE__*/React.createElement(Index, _extends({\n      contextValue: contextValue,\n      indexId: inferredIndexId\n    }, props));\n  });\n};\n\nIndexWrapper.propTypes = {\n  indexName: PropTypes.string.isRequired,\n  indexId: PropTypes.string\n};\nexport var IndexComponentWithoutContext = Index;\nexport default IndexWrapper;","map":{"version":3,"sources":["/Users/tingting/code/tin2294/repository-search/node_modules/react-instantsearch-core/dist/es/widgets/Index.js"],"names":["_extends","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","React","Component","Children","PropTypes","InstantSearchConsumer","IndexProvider","getIndexContext","props","targetedIndex","indexId","Index","_Component","_super","_this","indexContext","contextValue","onSearchParameters","getSearchParameters","bind","ais","multiIndexContext","state","undefined","key","value","componentDidMount","unregisterWidget","widgetsManager","registerWidget","componentDidUpdate","prevProps","indexName","update","componentWillUnmount","searchParameters","setIndex","render","childrenCount","count","children","createElement","getDerivedStateFromProps","string","isRequired","node","IndexWrapper","inferredIndexId","propTypes","IndexComponentWithoutContext"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,sBAAP,MAAmC,kDAAnC;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,0BAAP,MAAuC,sDAAvC;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,eAAP,MAA4B,2CAA5B;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAAE,MAAIC,yBAAyB,GAAGC,yBAAyB,EAAzD;;AAA6D,SAAO,SAASC,oBAAT,GAAgC;AAAE,QAAIC,KAAK,GAAGP,eAAe,CAACG,OAAD,CAA3B;AAAA,QAAsCK,MAAtC;;AAA8C,QAAIJ,yBAAJ,EAA+B;AAAE,UAAIK,SAAS,GAAGT,eAAe,CAAC,IAAD,CAAf,CAAsBU,WAAtC;;AAAmDF,MAAAA,MAAM,GAAGG,OAAO,CAACC,SAAR,CAAkBL,KAAlB,EAAyBM,SAAzB,EAAoCJ,SAApC,CAAT;AAA0D,KAA9I,MAAoJ;AAAED,MAAAA,MAAM,GAAGD,KAAK,CAACO,KAAN,CAAY,IAAZ,EAAkBD,SAAlB,CAAT;AAAwC;;AAAC,WAAOd,0BAA0B,CAAC,IAAD,EAAOS,MAAP,CAAjC;AAAkD,GAAxU;AAA2U;;AAEza,SAASH,yBAAT,GAAqC;AAAE,MAAI,OAAOM,OAAP,KAAmB,WAAnB,IAAkC,CAACA,OAAO,CAACC,SAA/C,EAA0D,OAAO,KAAP;AAAc,MAAID,OAAO,CAACC,SAAR,CAAkBG,IAAtB,EAA4B,OAAO,KAAP;AAAc,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC,OAAO,IAAP;;AAAa,MAAI;AAAEC,IAAAA,OAAO,CAACC,SAAR,CAAkBC,OAAlB,CAA0BC,IAA1B,CAA+BT,OAAO,CAACC,SAAR,CAAkBK,OAAlB,EAA2B,EAA3B,EAA+B,YAAY,CAAE,CAA7C,CAA/B;AAAgF,WAAO,IAAP;AAAc,GAApG,CAAqG,OAAOI,CAAP,EAAU;AAAE,WAAO,KAAP;AAAe;AAAE;;AAEzU,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,qBAAT,EAAgCC,aAAhC,QAAqD,oBAArD;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,aAAa,EAAED,KAAK,CAACE;AADhB,GAAP;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,KAAK,GAAG,aAAa,UAAUC,UAAV,EAAsB;AAC7CnC,EAAAA,SAAS,CAACkC,KAAD,EAAQC,UAAR,CAAT;;AAEA,MAAIC,MAAM,GAAGhC,YAAY,CAAC8B,KAAD,CAAzB;;AAEA,WAASA,KAAT,CAAeH,KAAf,EAAsB;AACpB,QAAIM,KAAJ;;AAEAxC,IAAAA,eAAe,CAAC,IAAD,EAAOqC,KAAP,CAAf;;AAEAG,IAAAA,KAAK,GAAGD,MAAM,CAACd,IAAP,CAAY,IAAZ,EAAkBS,KAAlB,CAAR;;AAEA5B,IAAAA,eAAe,CAACJ,sBAAsB,CAACsC,KAAD,CAAvB,EAAgC,OAAhC,EAAyC;AACtDC,MAAAA,YAAY,EAAER,eAAe,CAACO,KAAK,CAACN,KAAP;AADyB,KAAzC,CAAf;;AAIA5B,IAAAA,eAAe,CAACJ,sBAAsB,CAACsC,KAAD,CAAvB,EAAgC,kBAAhC,EAAoD,KAAK,CAAzD,CAAf;;AAEAA,IAAAA,KAAK,CAACN,KAAN,CAAYQ,YAAZ,CAAyBC,kBAAzB,CAA4CH,KAAK,CAACI,mBAAN,CAA0BC,IAA1B,CAA+B3C,sBAAsB,CAACsC,KAAD,CAArD,CAA5C,EAA2G;AACzGM,MAAAA,GAAG,EAAEN,KAAK,CAACN,KAAN,CAAYQ,YADwF;AAEzGK,MAAAA,iBAAiB,EAAEP,KAAK,CAACQ,KAAN,CAAYP;AAF0E,KAA3G,EAGGD,KAAK,CAACN,KAHT,EAGgBe,SAHhB;;AAKA,WAAOT,KAAP;AACD;;AAEDvC,EAAAA,YAAY,CAACoC,KAAD,EAAQ,CAAC;AACnBa,IAAAA,GAAG,EAAE,mBADc;AAEnBC,IAAAA,KAAK,EAAE,SAASC,iBAAT,GAA6B;AAClC,WAAKC,gBAAL,GAAwB,KAAKnB,KAAL,CAAWQ,YAAX,CAAwBY,cAAxB,CAAuCC,cAAvC,CAAsD,IAAtD,CAAxB;AACD;AAJkB,GAAD,EAKjB;AACDL,IAAAA,GAAG,EAAE,oBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASK,kBAAT,CAA4BC,SAA5B,EAAuC;AAC5C,UAAI,KAAKvB,KAAL,CAAWwB,SAAX,KAAyBD,SAAS,CAACC,SAAvC,EAAkD;AAChD,aAAKxB,KAAL,CAAWQ,YAAX,CAAwBY,cAAxB,CAAuCK,MAAvC;AACD;AACF;AANA,GALiB,EAYjB;AACDT,IAAAA,GAAG,EAAE,sBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASS,oBAAT,GAAgC;AACrC,UAAI,OAAO,KAAKP,gBAAZ,KAAiC,UAArC,EAAiD;AAC/C,aAAKA,gBAAL;AACD;AACF;AANA,GAZiB,EAmBjB;AACDH,IAAAA,GAAG,EAAE,qBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASP,mBAAT,CAA6BiB,gBAA7B,EAA+C3B,KAA/C,EAAsD;AAC3D,aAAO2B,gBAAgB,CAACC,QAAjB,CAA0B,KAAK5B,KAAL,GAAa,KAAKA,KAAL,CAAWwB,SAAxB,GAAoCxB,KAAK,CAACwB,SAApE,CAAP;AACD;AAJA,GAnBiB,EAwBjB;AACDR,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE,SAASY,MAAT,GAAkB;AACvB,UAAIC,aAAa,GAAGnC,QAAQ,CAACoC,KAAT,CAAe,KAAK/B,KAAL,CAAWgC,QAA1B,CAApB;;AAEA,UAAIF,aAAa,KAAK,CAAtB,EAAyB;AACvB,eAAO,IAAP;AACD;;AAED,aAAO,aAAarC,KAAK,CAACwC,aAAN,CAAoBnC,aAApB,EAAmC;AACrDmB,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWP;AADmC,OAAnC,EAEjB,KAAKP,KAAL,CAAWgC,QAFM,CAApB;AAGD;AAZA,GAxBiB,CAAR,EAqCR,CAAC;AACHhB,IAAAA,GAAG,EAAE,0BADF;AAEHC,IAAAA,KAAK,EAAE,SAASiB,wBAAT,CAAkClC,KAAlC,EAAyC;AAC9C,aAAO;AACLO,QAAAA,YAAY,EAAER,eAAe,CAACC,KAAD;AADxB,OAAP;AAGD;AANE,GAAD,CArCQ,CAAZ;;AA8CA,SAAOG,KAAP;AACD,CAzEwB,CAyEvBT,SAzEuB,CAAzB;;AA2EAtB,eAAe,CAAC+B,KAAD,EAAQ,WAAR,EAAqB;AAClCqB,EAAAA,SAAS,EAAE5B,SAAS,CAACuC,MAAV,CAAiBC,UADM;AAElClC,EAAAA,OAAO,EAAEN,SAAS,CAACuC,MAAV,CAAiBC,UAFQ;AAGlCJ,EAAAA,QAAQ,EAAEpC,SAAS,CAACyC;AAHc,CAArB,CAAf;;AAMAjE,eAAe,CAAC+B,KAAD,EAAQ,aAAR,EAAuB,cAAvB,CAAf;;AAEA,IAAImC,YAAY,GAAG,SAASA,YAAT,CAAsBtC,KAAtB,EAA6B;AAC9C,MAAIuC,eAAe,GAAGvC,KAAK,CAACwB,SAA5B;AACA,SAAO,aAAa/B,KAAK,CAACwC,aAAN,CAAoBpC,qBAApB,EAA2C,IAA3C,EAAiD,UAAUW,YAAV,EAAwB;AAC3F,WAAO,aAAaf,KAAK,CAACwC,aAAN,CAAoB9B,KAApB,EAA2BtC,QAAQ,CAAC;AACtD2C,MAAAA,YAAY,EAAEA,YADwC;AAEtDN,MAAAA,OAAO,EAAEqC;AAF6C,KAAD,EAGpDvC,KAHoD,CAAnC,CAApB;AAID,GALmB,CAApB;AAMD,CARD;;AAUAsC,YAAY,CAACE,SAAb,GAAyB;AACvBhB,EAAAA,SAAS,EAAE5B,SAAS,CAACuC,MAAV,CAAiBC,UADL;AAEvBlC,EAAAA,OAAO,EAAEN,SAAS,CAACuC;AAFI,CAAzB;AAIA,OAAO,IAAIM,4BAA4B,GAAGtC,KAAnC;AACP,eAAemC,YAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { InstantSearchConsumer, IndexProvider } from \"../core/context.js\";\n\nfunction getIndexContext(props) {\n  return {\n    targetedIndex: props.indexId\n  };\n}\n\n/**\n * The component that allows you to apply widgets to a dedicated index. It's\n * useful if you want to build an interface that targets multiple indices.\n *\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Index, SearchBox, Hits, Configure } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Configure hitsPerPage={5} />\n *     <SearchBox />\n *     <Index indexName=\"instant_search\">\n *       <Hits />\n *     </Index>\n *     <Index indexName=\"bestbuy\">\n *       <Hits />\n *     </Index>\n *   </InstantSearch>\n * );\n */\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      indexContext: getIndexContext(_this.props)\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n\n    _this.props.contextValue.onSearchParameters(_this.getSearchParameters.bind(_assertThisInitialized(_this)), {\n      ais: _this.props.contextValue,\n      multiIndexContext: _this.state.indexContext\n    }, _this.props, undefined);\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.indexName !== prevProps.indexName) {\n        this.props.contextValue.widgetsManager.update();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (typeof this.unregisterWidget === 'function') {\n        this.unregisterWidget();\n      }\n    }\n  }, {\n    key: \"getSearchParameters\",\n    value: function getSearchParameters(searchParameters, props) {\n      return searchParameters.setIndex(this.props ? this.props.indexName : props.indexName);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var childrenCount = Children.count(this.props.children);\n\n      if (childrenCount === 0) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(IndexProvider, {\n        value: this.state.indexContext\n      }, this.props.children);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props) {\n      return {\n        indexContext: getIndexContext(props)\n      };\n    }\n  }]);\n\n  return Index;\n}(Component);\n\n_defineProperty(Index, \"propTypes\", {\n  indexName: PropTypes.string.isRequired,\n  indexId: PropTypes.string.isRequired,\n  children: PropTypes.node\n});\n\n_defineProperty(Index, \"displayName\", 'AlgoliaIndex');\n\nvar IndexWrapper = function IndexWrapper(props) {\n  var inferredIndexId = props.indexName;\n  return /*#__PURE__*/React.createElement(InstantSearchConsumer, null, function (contextValue) {\n    return /*#__PURE__*/React.createElement(Index, _extends({\n      contextValue: contextValue,\n      indexId: inferredIndexId\n    }, props));\n  });\n};\n\nIndexWrapper.propTypes = {\n  indexName: PropTypes.string.isRequired,\n  indexId: PropTypes.string\n};\nexport var IndexComponentWithoutContext = Index;\nexport default IndexWrapper;"]},"metadata":{},"sourceType":"module"}