{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport PropTypes from 'prop-types';\nimport createConnector from \"../core/createConnector.js\";\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getIndexId } from \"../core/indexUtils.js\";\n\nfunction getId() {\n  return 'query';\n}\n\nfunction getAdditionalId() {\n  return 'additionalVoiceParameters';\n}\n\nfunction getCurrentRefinementQuery(props, searchState, context) {\n  var id = getId();\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, '');\n\n  if (currentRefinement) {\n    return currentRefinement;\n  }\n\n  return '';\n}\n\nfunction getCurrentRefinementAdditional(props, searchState, context) {\n  var id = getAdditionalId();\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, '');\n\n  if (currentRefinement) {\n    return currentRefinement;\n  }\n\n  return {};\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var _nextValue;\n\n  var id = getId();\n  var voiceParams = getAdditionalId();\n  var queryLanguages = props.language ? {\n    queryLanguages: [props.language.split('-')[0]]\n  } : {};\n  var additionalQueryParameters = typeof props.additionalQueryParameters === 'function' ? _objectSpread({\n    ignorePlurals: true,\n    removeStopWords: true,\n    optionalWords: nextRefinement\n  }, props.additionalQueryParameters({\n    query: nextRefinement\n  })) : {};\n  var nextValue = (_nextValue = {}, _defineProperty(_nextValue, id, nextRefinement), _defineProperty(_nextValue, voiceParams, _objectSpread(_objectSpread({}, queryLanguages), additionalQueryParameters)), _nextValue);\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  var interimState = cleanUpValue(searchState, context, getId());\n  return cleanUpValue(interimState, context, getAdditionalId());\n}\n\nexport default createConnector({\n  displayName: 'AlgoliaVoiceSearch',\n  propTypes: {\n    defaultRefinement: PropTypes.string\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      currentRefinement: getCurrentRefinementQuery(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      isSearchStalled: searchResults.isSearchStalled\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    var query = getCurrentRefinementQuery(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var additionalParams = getCurrentRefinementAdditional(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return searchParameters.setQuery(query).setQueryParameters(additionalParams);\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId();\n    var currentRefinement = getCurrentRefinementQuery(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      id: id,\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: currentRefinement === null ? [] : [{\n        label: \"\".concat(id, \": \").concat(currentRefinement),\n        value: function value(nextState) {\n          return _refine(props, nextState, '', {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});","map":{"version":3,"sources":["/Users/tingting/code/tin2294/repository-search/node_modules/react-instantsearch-core/dist/es/connectors/connectVoiceSearch.js"],"names":["_defineProperty","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","PropTypes","createConnector","cleanUpValue","refineValue","getCurrentRefinementValue","getIndexId","getId","getAdditionalId","getCurrentRefinementQuery","props","searchState","context","id","currentRefinement","getCurrentRefinementAdditional","_refine","nextRefinement","_nextValue","voiceParams","queryLanguages","language","split","additionalQueryParameters","ignorePlurals","removeStopWords","optionalWords","query","nextValue","resetPage","_cleanUp","interimState","displayName","propTypes","defaultRefinement","string","getProvidedProps","searchResults","ais","contextValue","multiIndexContext","indexContextValue","isSearchStalled","refine","cleanUp","getSearchParameters","searchParameters","additionalParams","setQuery","setQueryParameters","getMetadata","index","items","label","concat","value","nextState"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport createConnector from \"../core/createConnector.js\";\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getIndexId } from \"../core/indexUtils.js\";\n\nfunction getId() {\n  return 'query';\n}\n\nfunction getAdditionalId() {\n  return 'additionalVoiceParameters';\n}\n\nfunction getCurrentRefinementQuery(props, searchState, context) {\n  var id = getId();\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, '');\n\n  if (currentRefinement) {\n    return currentRefinement;\n  }\n\n  return '';\n}\n\nfunction getCurrentRefinementAdditional(props, searchState, context) {\n  var id = getAdditionalId();\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, '');\n\n  if (currentRefinement) {\n    return currentRefinement;\n  }\n\n  return {};\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var _nextValue;\n\n  var id = getId();\n  var voiceParams = getAdditionalId();\n  var queryLanguages = props.language ? {\n    queryLanguages: [props.language.split('-')[0]]\n  } : {};\n  var additionalQueryParameters = typeof props.additionalQueryParameters === 'function' ? _objectSpread({\n    ignorePlurals: true,\n    removeStopWords: true,\n    optionalWords: nextRefinement\n  }, props.additionalQueryParameters({\n    query: nextRefinement\n  })) : {};\n  var nextValue = (_nextValue = {}, _defineProperty(_nextValue, id, nextRefinement), _defineProperty(_nextValue, voiceParams, _objectSpread(_objectSpread({}, queryLanguages), additionalQueryParameters)), _nextValue);\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  var interimState = cleanUpValue(searchState, context, getId());\n  return cleanUpValue(interimState, context, getAdditionalId());\n}\n\nexport default createConnector({\n  displayName: 'AlgoliaVoiceSearch',\n  propTypes: {\n    defaultRefinement: PropTypes.string\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      currentRefinement: getCurrentRefinementQuery(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      isSearchStalled: searchResults.isSearchStalled\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    var query = getCurrentRefinementQuery(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    var additionalParams = getCurrentRefinementAdditional(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return searchParameters.setQuery(query).setQueryParameters(additionalParams);\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId();\n    var currentRefinement = getCurrentRefinementQuery(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      id: id,\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: currentRefinement === null ? [] : [{\n        label: \"\".concat(id, \": \").concat(currentRefinement),\n        value: function value(nextState) {\n          return _refine(props, nextState, '', {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});"]},"metadata":{},"sourceType":"module"}